apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  type: LoadBalancer
  ports:
  - port: 8888
    targetPort: 3000
  selector:
    app: guestbook
    tier: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: bschmitt769/kubernetes-demo-apps-frontend:1.3
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 400Mi
        livenessProbe:
         httpGet:
           path: /healthz
           port: 3000
         initialDelaySeconds: 30
         periodSeconds: 10
         timeoutSeconds: 3
         failureThreshold: 3
        env:
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: newrelic-license-key
              key: license
        - name: NEW_RELIC_APP_NAME
          value: Workshop-Frontend
        - name: NEW_RELIC_APPLICATION_LOGGING_LOCAL_DECORATING_ENABLED
          value: "true"
        - name: NEW_RELIC_APPLICATION_LOGGING_FORWARDING_ENABLED
          value: "false"
          # tells the node.js app to pause at random intervals
        - name: LOOK_BUSY
          value: f
          # tells the node.js app to throw synthetic errors
        - name: THROW_ERROR
          value: t
        - name: GET_HOSTS_FROM
          value: dns
          # If your cluster config does not include a dns service, then to
          # instead access environment variables to find service host
          # info, comment out the 'value: dns' line above, and uncomment the
          # line below:
          # value: env
        ports:
          - containerPort: 3000
